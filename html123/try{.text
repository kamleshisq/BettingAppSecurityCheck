 try{
            let matchName = data.type.split('/')[0]
            let Marketname = data.type.split('/')[1]
            let dataDB = await betLimitMatchWisemodel.findOne({matchTitle:matchName})
            if(dataDB != null){
                console.log(dataDB)
                let marketData = dataDB.marketDetails.find(item => item.title == Marketname)
                if(marketData){
                    let index = dataDB.marketDetails.findIndex(item => item.title === Marketname);
                    if (index !== -1) { 
                        let newMarketDetailsForData = {
                            title: Marketname,
                            value: [
                              {
                                title: 'min_stake',
                                value: parseInt(data.min_stake)
                              },
                              {
                                title: 'max_stake',
                                value: parseInt(data.max_stake)
                              },
                              {
                                title: 'max_profit',
                                value: parseInt(data.max_profit)
                              },
                              {
                                title: 'max_odd',
                                value: parseInt(data.max_odd)
                              },
                            ]
                          }
                          dataDB.marketDetails[index] = newMarketDetailsForData
                          dataDB.save()
                          socket.emit('updateBetLimitMarket', newMarketDetailsForData)
                    }else{
                        socket.emit('updateBetLimitMarket', {status:err} )
                    }
                }else{
                    let newMarketDetailsForData = {
                        title: Marketname,
                        value: [
                          {
                            title: 'min_stake',
                            value: parseInt(data.min_stake)
                          },
                          {
                            title: 'max_stake',
                            value: parseInt(data.max_stake)
                          },
                          {
                            title: 'max_profit',
                            value: parseInt(data.max_profit)
                          },
                          {
                            title: 'max_odd',
                            value: parseInt(data.max_odd)
                          },
                        ]
                      }
                      dataDB.marketDetails.push(newMarketDetailsForData)
                      dataDB.save()
                      socket.emit('updateBetLimitMarket', newMarketDetailsForData)
                }
            }else{
                let marketDetails = {
                    matchTitle: matchName,
                    marketDetails: [
                      {
                        title: Marketname,
                        value: [
                          {
                            title: 'min_stake',
                            value: parseInt(data.min_stake)
                          },
                          {
                            title: 'max_stake',
                            value: parseInt(data.max_stake)
                          },
                          {
                            title: 'max_profit',
                            value: parseInt(data.max_profit)
                          },
                          {
                            title: 'max_odd',
                            value: parseInt(data.max_odd)
                          },
                        ]
                      }
                    ]
                  };
                  await betLimitMatchWisemodel.create(marketDetails)
                socket.emit('updateBetLimitMarket', marketDetails)
            }
        }catch(err){
            console.log(err)
            socket.emit('updateBetLimitMarket', {status:err} )
        }



        min_stake: '100',
  max_stake: '1000',
  max_profit: '5000',
  max_odd: '100',
  delay: '5',