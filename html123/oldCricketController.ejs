<div id="Cricket" class="tabcontent">
    <div class="row">
      
      <%let check1 = false %>
      <%for(let i = 0; i < openBet.length; i++){%>
        <%if(openBet[i].bettype == "Cricket"){%>
          <%for(let j = 0 ; j < openBet[i].details.length; j++){%>
            <%
            let check = liveCricket.some(item => item.eventData.eventId == openBet[i].details[j][0].eventId)
            %>
          <%if(check){%>
            <% check1=true %>
          <section>
            <div class="container-fluid">
              <div class="new-head">
                <h3 class="head-hr"><%=  openBet[i].details[j][0].match %></h3>
                <a class="btn-filter" href="/admin/riskAnalysis?id=<%= openBet[i].details[j][0].eventId %>" >View Details &nbsp;<i class="fa-solid fa-chevron-right"></i></a>
              </div>
                <div class="video-section-1">
                  <div class="video-play">
                    <div class="hed-data">
                      <h3 class="live-head"> <%=openBet[i].details[j][0].marketName%> </h3>
                    </div>
                    <div class="full-adta">
                      <table>
                        <thead>
                          <tr>
                            <th>OUTCOMES/RUNNER</th>
                            <th>EXPOSURE</th>
                            <th>TOTAL BETS</th>
                          </tr>
                        </thead>
                        <tbody id="<%=openBet[i].details[j].id%>" class="MarketIdsR">
                          <%for(let k = 0; k < openBet[i].details[j].length; k++){%>
                            <%if(k < 1){%>
                            <%
                              let data 
                              let matchodd = false
                              data = liveCricket.find(item => (item.marketList) && (item.marketList.match_odd != null) &&(item.marketList.match_odd.marketId == openBet[i].details[j][k].id))
                              if(!data){
                                matchodd = true
                                data = liveCricket.find(item => (item.marketList) && (item.marketList.bookmaker != null) &&(item.marketList.bookmaker[0].marketId == openBet[i].details[j][k].id))
                              }
                            %>
                            <%if(data){%>
                            <%if(!matchodd){%>
                              <% let runners = JSON.parse(data.marketList.match_odd.runners); %>
                              <% const runners1 = []; %>
                              <%const secIds = []; %>
                              <%runners.forEach(item => {%>
                              <%runners1.push(item.runner);%>
                              <%secIds.push(item.secId);%>
                              <%});%>
                              <%for(let j = 0; j < runners1.length; j++){%>
                                <tr>
                                  <td><%=runners1[j]%></td>
                                    <td id="<%=secIds[j]%>">00</td>
                                    <td id="<%=secIds[j]%>B">00</td>
                                </tr>
                              <%}%>
                            <%}else{%>
                              <% let runners = JSON.parse(data.marketList.bookmaker[0].runners); %>
                              <% const runners1 = []; %>
                              <%const secIds = []; %>
                              <%runners.forEach(item => {%>
                              <%runners1.push(item.runner);%>
                              <%secIds.push(item.secId);%>
                              <%});%>
                              <%for(let j = 0; j < runners1.length; j++){%>
                                <tr>
                                  <td><%=runners1[j]%></td>
                                    <td id="<%=secIds[j]%>">00</td>
                                    <td id="<%=secIds[j]%>B">00</td>
                                </tr>
                              <%}%>
                            <%}%>
                            <%}%>
                            <%}%>
                          <%}%>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div> 
            </section>
            <%}%>
            <%}%>
        <%}%>
      <%}%>
      <%if(!openBet.some(item => item.bettype == "Cricket")){%>
        No data to display
      <%}else if (!check1){%>
        No data to display
        <%}%>
    </div>
    <!-- <button class="btn btn-view-all">View All</button> -->
  </div>


















  exports.getLiveMarketsPage = catchAsync(async(req, res, next) => {
    const runners = await runnerData.find()
    let marketIds = await runnerData.distinct('marketId', {})

    console.log(runners,marketIds, "runnersrunnersrunners")
    // const sportData = await getCrkAndAllData()
    // const cricket = sportData[0].gameList[0].eventList
    // let liveCricket = cricket;
    // const footBall = sportData[1].gameList.find(item => item.sport_name === "Football");
    // const Tennis = sportData[1].gameList.find(item => item.sport_name === "Tennis");
    // let liveFootBall = footBall.eventList;
    // let liveTennis = Tennis.eventList
    let currentUser =  req.currentUser
    let id = req.currentUser._id
    if(req.currentUser.role.roleName == 'Operator'){
        let parentUser = await User.findById(req.currentUser.parent_id)
        id = parentUser._id.toString()
    }
    let childrenUsername = []
    childrenUsername = await User.distinct('userName', {parentUsers:id});

    // // let children = await User.find({parentUsers:id})
    // // children.map(ele => {
    // //     childrenUsername.push(ele.userName) 
    // // })

    // // console.log(childrenUsername, "+====>> childrenUsername ")
    // // console.log(req.currentUser)
    // let openBet = topGames = await betModel.aggregate([
    //     {
    //         $match: {
    //             status:"OPEN" ,
    //             userName:{$in:childrenUsername},
    //             marketId:{$in:marketIds}
    //         }
    //     },
    //     {
    //         $addFields: {
    //             shortMarketName: { $substrCP: [{ $toLower: "$marketName" }, 0, 3] }
    //         }
    //     },
    //     {
    //         $match: {
    //             shortMarketName: { $in: ["mat", "boo", "tos"] }
    //         }
    //     },
    //     {
    //         $group: {
    //             _id: {
    //                 betType: "$betType",
    //                 marketId: "$marketId",
    //                 beton: "$selectionName"
    //             },
    //             marketName: { $first: "$marketName" },
    //             match: { $first: "$match" },
    //             date: { $first: "$date" },
    //             secId : { $first: "$secId" },
    //             stake: { $sum: "$Stake" },
    //             eventId : {$first : '$eventId'},
    //             count:{$sum:1}
    //         }
    //     },
    //     {
    //         $group: {
    //             _id: {
    //                 betType: "$_id.betType",
    //                 marketId: "$_id.marketId"
    //             },
    //             details: {
    //                 $push: {
    //                     id: "$_id.marketId",
    //                     marketName: "$marketName",
    //                     shortMarketName: "$shortMarketName",
    //                     match: "$match",
    //                     date: "$date",
    //                     secId: '$secId',
    //                     count:'$count',
    //                     stake: "$stake",
    //                     beton: "$_id.beton",
    //                     eventId: '$eventId'
    //                 }
    //             }
    //         }
    //     },
    //     {
    //         $group: {
    //             _id: "$_id.betType",
    //             details: { $push: "$details" }
    //         }
    //     },
    //     {
    //         $project: {
    //             _id: 0,
    //             bettype: "$_id",
    //             details: 1
    //         }
    //     }
    // ])

    // console.log(openBet[0].details, "openBetopenBet")
    res.status(200).render("./liveMarket/liveMarket", {
        title:"Live Market",

        // liveCricket,
        // liveFootBall,
        // liveTennis,
        runners,
        currentUser,
        // openBet,
        me: currentUser
    })
})